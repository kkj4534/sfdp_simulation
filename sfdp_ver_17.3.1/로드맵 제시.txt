아마 이거 보는 여러분이라면, 이걸 대체 어따 써먹을 수 있을까 의아해 할 겁니다. 저야 그냥 시간 남고 열정 남아서 한 3주 정도 빡세게 돌렸는데, 솔직히 금전적으로 이득일지 의심이 가실 겁니다.

제가 조심스럽게 제시하는 로드맵은 이렇습니다.
1. 현재 84% 가량의 신뢰성 데이터에서 83% 정합률이 나왔으니, 여러분들이라면 더 고급 데이터와 방대한 데이터로 스마트 튜닝해서 사용 가능할 겁니다. 대체 어떻게 해야 되는지 ai랑 안친해서 모르겠다면, 연락 주세요

2. 그렇게 validation이 확보된 시뮬레이터로, 상황별로 범주화된 데이터를 뽑아냅니다. 정합성은 좀 떨어지겠지만, 여러분 실력에 따라 많이 안떨어질 수도 있을겁니다.  이걸, 회귀 강화 학습 ai에게 다시 던져줍니다.

3. 해당 ai가 입력을 받을 때, 자동으로 범주화 내에서 구조를 타고 기존 데이터와 유사했는지 확인하는 알고리즘을 포함시키고, 이를 기반으로 구동되는, 경량화 버전의 블랙박스 ai를 만듭니다. 

4. 해당 ai를 임베딩하고, 데이터 입출력을 조금 더 손봐서 센서 데이터를 로딩 가능하게 하면, 실시간 machine 구동에 있어서 시뮬레이션을 로딩 가능하게 할 수 있습니다.

5. 현재 코어는 유연한 상태이니, 필요에 따라 기능을 추가하면 연속가공이나 tool 교체 등에 대해서도 따로 쓸 수 있을 겁니다.

6. 필요에 따라, 서버-엣지 시스템을 갖춰서 기존 데이터가 없을 경우, 서버의 시뮬레이터로 보내서 더 정밀하게 분석을 진행합니다. 이는, 3번에서 유사도 체크의 이유이기도 합니다.

위와 같이 진행할 경우, 소프트웨어적인 면모에서만 있고, 센서를 추가하신다면, 아마 큰 지출 없이 실시간 가공 시뮬레이션을 갖춘 디지털 트윈 시스템을 구축하는 것도 무리는 아닐 겁니다.

사실, 전 이 분야 전문가도 아니고, 그냥 지나가던 학부생일 뿐입니다. 그냥 간단하게 이러면 되지 않나? 하고 던진 말들일 뿐이니, 가볍게 넘어가 주세요. 